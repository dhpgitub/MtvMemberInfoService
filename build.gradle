//import com.deanhealthplan.core.cd.automation.utilities.CredentialsManager;
//import com.deanhealthplan.core.cd.automation.utilities.CipherUtility;
//import com.deanhealthplan.core.cd.automation.utilities.NexusUtility;

buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE' 
	}
	repositories {
		maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-public/'}
		maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-snapshots/'}
		maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-releases/'}
	}
	dependencies {
		//classpath group: 'com.deanhealthplan.core', name: 'core-cd-automation-all', version:'1.1.0-SNAPSHOT'
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('io.spring.gradle:dependency-management-plugin:1.0.4.RELEASE')
		classpath group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
		classpath 'com.github.jacobono:gradle-jaxb-plugin:1.3.5'
		
	}
}
plugins {
	id 'org.hidetake.ssh' version '2.5.1'
	id 'com.gorylenko.gradle-git-properties' version '1.4.21'
	id "com.github.ManifestClasspath" version "0.1.0-RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: "com.github.ManifestClasspath"

//####################### XJC - JDK 1.7/1.8 ####################
apply plugin: 'com.github.jacobono.jaxb'
//######################

description = """This will be used by 270271 application to contact the MTV API's."""

sourceCompatibility = 1.8
targetCompatibility = 1.8

Properties props = new Properties()
props.load(new FileInputStream("build.properties"))
props.each { prop ->
	project.ext.set(prop.key, prop.value)
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.0'
}

springBoot {
	mainClassName ="com.deanhealthplan.memberinfo.MemberInfo"
	/*executable=true*/	
}
bootJar {
	mainClassName ='com.deanhealthplan.memberinfo.MemberInfo'	
	baseName = project.'maven.artifact.id'
	version =  project.'maven.artifact.version' + "-" +  project.'maven.repository.type'
}

bootRun {
       systemProperties System.properties
}


repositories {
	maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-public/'}
	maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-snapshots/'}
	maven {url 'https://nexus.dhp.ad.deanhealth.com:8443/repository/maven-releases/'}
}

configurations {
	providedRuntime
}


dependencies {
	compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
	// compile('org.springframework.boot:spring-boot-starter-cache')
	compile group: 'org.springframework', name: 'spring-context-support', version: '4.1.8.RELEASE'
	compile("org.springframework:spring-tx")
	compile("com.fasterxml.jackson.core:jackson-databind:2.9.4")
	compile ("org.apache.httpcomponents:httpclient")
	// spring actuator
	compile ("org.springframework.boot:spring-boot-starter-actuator")
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-sleuth
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '2.0.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-zipkin
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-zipkin', version: '2.0.1.RELEASE'
	
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-all
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-all', version: '2.0.1.RELEASE'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-consul-config
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-consul-config', version: '2.0.1.RELEASE'
		
	// https://mvnrepository.com/artifact/org.springframework.ws/spring-ws-core
	compile group: 'org.springframework.ws', name: 'spring-ws-core'
	
	// https://mvnrepository.com/artifact/com.google.guava/guava
	compile group: 'com.google.guava', name: 'guava', version: '19.0-rc2'

	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	//compile group: 'com.google.code.gson', name: 'gson', version:'2.6.2'

	// https://mvnrepository.com/artifact/org.apache.poi/poi
	//compile group: 'org.apache.poi', name: 'poi', version: '3.15'
	// https://mvnrepository.com/artifact/org.apache.poi/poi-scratchpad
	//compile group: 'org.apache.poi', name: 'poi-scratchpad', version: '3.15'
	// https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
	//compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'
	// https://mvnrepository.com/artifact/org.apache.pdfbox/pdfbox
	// compile group: 'org.apache.pdfbox', name: 'pdfbox', version: '2.0.3'

	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1'

	//compile group: 'com.deanhealthplan.core', name: 'core-cd-automation-all', version:'1.1.0-SNAPSHOT'

	//jaxb ("com.sun.xml.bind:jaxb-xjc:2.2.7-b41")
	jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
	jaxb 'javax.xml.bind:jaxb-api:2.3.0'

	// custom build for MTV jars
	compile group: 'com.metavance.common', name: 'encryption', version: '2.10.33'
	compile group: 'com.metavance.common', name: 'genrt85', version: '2.10.33'
	compile group: 'com.metavance.membership', name: 'smbr1av3', version: '2.10.13'
	compile group: 'com.metavance.membership', name: 'smbr1dl4', version: '2.6.0'
	
	// for JSON logging
	runtime('net.logstash.logback:logstash-logback-encoder:5.0') {
		exclude group: "ch.qos.logback", module: "logback-core"
	}

}

eclipse {
	project {
		//if you don't like the name Gradle has chosen
		name = 'MemberInfoService'
	}
}

//####################### XJC - JDK 1.7/1.8 ####################
jaxb {
	System.setProperty('javax.xml.accessExternalSchema', 'all')
	xjc {
		xsdDir = "schemas"
		generatePackage = "com.deanhealthplan.memberinfo.domain.api"
	}
}

//jar {
//	enabled = true
//	baseName = project.'maven.artifact.id'
//	version =  project.'maven.artifact.version' + "-" +  project.'maven.repository.type'
//}

// TODO: possibly remove after done testing
task srcjar(type: Jar) {
	archiveName "Generated_${rootProject.name}-${version}-src.jar"
	from 'src/main/java'
}

//task buildall(dependsOn: ['clean', 'xjc', 'jar', 'srcjar']) {
//	xjc.mustRunAfter clean
//	jar.mustRunAfter xjc
//	srcjar.mustRunAfter jar
//}

task buildall(dependsOn: ['clean', 'jar', 'srcjar']) {
	jar.mustRunAfter clean
	srcjar.mustRunAfter jar
}

task prepMessage(){
	doFirst{
		println ""
		println "*******************************************************"
		println "*   In order for the application to work you must"
		println "*   update the application_default.properties to have "
		println "*   your user id and password. To get your password  "
		println "*   encrypted run:"
		println "*   gradle encPass"
		println "*******************************************************"
		println ""
	}
}
task encPass(dependsOn: classes, type: JavaExec){
	main = 'com.deanhealthplan.web.framework.config.PropertiesConfig'
	classpath = sourceSets.main.runtimeClasspath
	standardInput = System.in
}
tasks['eclipse'].dependsOn prepMessage


task DEVProfile {
       doFirst {
              bootRun.systemProperty 'spring.profiles.active', 'dvlx'
       }
}

task UATXProfile {
       doFirst {
              bootRun.systemProperty 'spring.profiles.active', 'uatx'
       }
}

task PRODProfile {
       doFirst {
              bootRun.systemProperty 'spring.profiles.active', 'prod'
       }
}


def targetEnvi = null

if ( project.hasProperty("targetEnv") ) {
	targetEnvi = targetEnv
}else{
	targetEnvi = "dev"
}

